#!/bin/bash
# BOCK - Back Mocking System
# Programmer: Nick Wertzberger
# Website: ideaheap.com
# Bock works by storing metadata in the directory it runs in.

function bockMockSpy {
    local FUNC_NAME=$1
    echo "$@" >> $BOCK_BASEDIR/.bock/$FUNC_NAME
}

function verify {
    local numCalls=-1
    local callToCheck=""
    local callArgs=""
    while true
    do
        local arg=$1
        shift
        case "${arg}" in
        "--times")
            numCalls="$1"
            shift;;
        "") break;;
        *)  [ -z $callToCheck ] && callToCheck=$arg ||
            callArgs="$callArgs $arg";;
        esac
    done
    local fullCall="$callToCheck $callArgs"

    # remove spaces
    fullCall=${fullCall%% *}

    # Get spy data
    eval local calls=$(cat $BOCK_BASEDIR/.bock/$callToCheck 2>/dev/null | wc -l)
    eval local callMatches=$(
        cat $BOCK_BASEDIR/.bock/$callToCheck 2>/dev/null |
        grep "$fullCall" 2>/dev/null |
        wc -l)

    # Test Spy data
    if [[ $numCalls == -1 && $callMatches > 0 ]]
    then
        return 0
    elif [[ $callMatches == $numCalls ]]
    then
        return 0
    elif [[ $numCalls == -1 ]]
    then
        echo "ERROR: Wanted but not invoked. '$fullCall'" 1>&2
        return 1
    else
        echo "ERROR: Expected $numCalls times but was $callMatches: '$fullCall'" 1>&2
        return 1
    fi
}

function resetMocks {
    local FUNC=$1
    if [ x"$FUNC" == x ]
    then
        FUNC='*'
    fi
    rm $BOCK_BASEDIR/.bock/$FUNC
}

BOCK_BASEDIR=$(pwd)
mkdir -p $BOCK_BASEDIR/.bock
rm $BOCK_BASEDIR/.bock/* 2>/dev/null
shopt -s expand_aliases

# Task alias all passed in functions to mockSpy
for x in $@
do
    eval "function $x { bockMockSpy $x \$@; }"
    eval "export -f $x"
done

